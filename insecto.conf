# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  jdbc { 
    # The path to our downloaded jdbc driver
    # jdbc_driver_library => "/Users/frogman/Documents/mysql-connector-java-8.0.21/mysql-connector-java-8.0.21.jar"
    jdbc_driver_library => "path/to/mysql-connector.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"

    # database and schemas
    # jdbc_connection_string => "jdbc:mysql://localhost:3306/insectodb"
    jdbc_connection_string => "jdbc:mysql//mydomain:3306/database"

    # The user we wish to execute our statement as
    jdbc_user => "root"
    jdbc_password => ""

    # jdbc_paging_enabled => true
    # our query
    schedule => "*/5 * * * * *" # contact MySQL every 5 seconds
    statement => "SELECT 
                      np.noti_id,
                      st.status_name,
                      us.name,
                      us.email,
                      it.item_code,
                      it.room_code,
                      it.room_name,
                      it.building_code,
                      it.building_name,
                      it.type_name,
                      it.group,
                      it.brand_name,
                      it.serial_number,
                      it.model,
                      it.itemnote,
                      np.problem_description,
                      np.service_desk_code,
                      np.note,
                      np.created_at,
                      np.updated_at,
                      UNIX_TIMESTAMP(np.updated_at) AS unix_ts_in_secs
                  FROM
                      notification__problems AS np
                      LEFT JOIN
                          statuses AS st ON st.status_id = np.status_id
                      LEFT JOIN 
                          users AS us ON us.id = np.user_id
                      LEFT JOIN
                          (SELECT 
                              it.item_id,
                              it.item_code,
                              rm.room_code,
                              rm.room_name,
                              rm.building_code,
                              rm.building_name,
                              tp.type_name,
                              it.group,
                              bd.brand_name,
                              it.serial_number,
                              it.model,
                              it.note AS itemnote
                          FROM
                              items AS it
                          LEFT JOIN 
                              (SELECT 
                                  rm.room_id,
                                  rm.room_code,
                                  rm.room_name,
                                  bd.building_code,
                                  bd.building_name
                              FROM
                                  rooms AS rm
                              LEFT JOIN buildings AS bd ON bd.building_id = rm.building_id) AS rm ON rm.room_id = it.room_id
                          LEFT JOIN item__types AS tp ON tp.type_id = it.type_id
                          LEFT JOIN brands AS bd ON bd.brand_id = it.brand_id) AS it ON it.item_id = np.item_id
                  WHERE (UNIX_TIMESTAMP(np.updated_at) > :sql_last_value AND np.updated_at < NOW()) 
                  ORDER BY np.updated_at ASC"

    # first prototype
    # "SELECT *, 
    # UNIX_TIMESTAMP(np.updated_at) AS unix_ts_in_secs 
    # FROM notification__problems as np
    # WHERE (UNIX_TIMESTAMP(np.updated_at) > :sql_last_value AND np.updated_at < NOW()) 
    # ORDER BY np.updated_at ASC"
    use_column_value => true
    tracking_column => unix_ts_in_secs
    tracking_column_type => "numeric"
    }
}

filter {
  mutate {
    remove_field => ["@version", "cancel_flag", "unix_ts_in_secs"]
  }
   ruby {
    path => 'insecto.rb'
  }
}

output {
  elasticsearch {
    # hosts => ["http://localhost:9200"]
    hosts => ["http://mydomain:9200"]
    index => "notification_problems_sync"
    document_id => "%{noti_id}"
    #user => "elastic"
    #password => "changeme"
  }
}
